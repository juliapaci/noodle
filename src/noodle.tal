( Noodle )

|00 @System &vector $2 &pad $6 &r $2 &g $2 &b $2
|10 @Console &vector $2 &read $1 &pad $5 &write $1
|20 @Screen &vector $2 &width $2 &height $2 &auto $1 &pad $1 &x $2 &y $2 &addr $2 &pixel $1 &sprite $1
|80 @Controller &vector $2 &button $1 &key $1
|90 @Mouse &vector $2 &x $2 &y $2 &state $1 &pad $3 &scrollx $2 &scrolly $2
|a0 @File &vector $2 &success $2 &stat $2 &delete $1 &append $1 &name $2 &length $2 &read $2 &write $2

|0000

@state &timer $1 &changed $1
@brush &tool $1 &size $1 &patt $1 &oper $2 &mode $1
@cursor &x1 $2 &y1 $2 &x2 $2 &y2 $2 &last $1 &drag $1
@zoom &active $1 &x $2 &y $2
@guide &x $2 &y $2 &x2 $2 &y2 $2
@line &x1 $2 &y1 $2 &x2 $2 &y2 $2 &sx $2 &sy $2 &dx $2 &dy $2 &e1 $2 &e2 $2
@line-guide &x1 $2 &y1 $2 &x2 $2 &y2 $2 &sx $2 &sy $2 &dx $2 &dy $2 &e1 $2 &e2 $2
( views )
@panel &x $2 &y $2 &x2 $2 &y2 $2 &drag-event $2
@viewport &x $2 &y $2 &x2 $2 &y2 $2 &size &w $1 &h $1
@viewport-handle &x $2 &y $2 &x2 $2 &y2 $2 &drag-event $2
@viewport-label &x $2 &y $2 &x2 $2 &y2 $2 &drag-event $2
@surface &x $2 &y $2 &x2 $2 &y2 $2 &size &w $1 &h $1
@surface-handle &x $2 &y $2 &x2 $2 &y2 $2 &drag-event $2
( project )
@filepath $40

|0100

	( vectors )
	;on-console .Console/vector DEO2
	( connect drag events )
	;on-drag-panel .panel/drag-event STZ2
	;on-drag-viewport-handle .viewport-handle/drag-event STZ2
	;on-drag-viewport-label .viewport-label/drag-event STZ2
	;on-drag-surface-handle .surface-handle/drag-event STZ2
	( colors )
	#70fe .System/r DEO2
	#c0f3 .System/g DEO2
	#90f3 .System/b DEO2
	( theme support )
	;load-theme JSR2
	( default brush )
	#04 .brush/size STZ
	#00 .brush/patt STZ
	#00 .brush/tool STZ
	( initial position )
	#0008 #0008 ;set-panel-position JSR2
	#0028 #0012 ;set-viewport-position JSR2
	.Screen/width DEI2 #03 SFT2 NIP #07 SUB .Screen/height DEI2 #03 SFT2 NIP #04 SUB ;set-viewport-size JSR2
	.viewport/w LDZ #02 SUB .viewport/h LDZ #02 SUB ;set-surface-size JSR2
	( let's begin. )
	;untrap JSR2
	;new-file JSR2

BRK

@untrap ( -- )

	( vectors )
	;on-frame .Screen/vector DEO2
	;on-button .Controller/vector DEO2
	;on-mouse .Mouse/vector DEO2
	( filepath )
	#06 ;draw-filepath JSR2
	#00 .Mouse/state DEO

JMP2r

@trap ( -- )

	( vectors )
	;on-frame-trap .Screen/vector DEO2
	;on-button-trap .Controller/vector DEO2
	;on-mouse-trap .Mouse/vector DEO2
	( filepath )
	#06 ;draw-filepath JSR2
	#00 .Mouse/state DEO
	( clear brush )
	.cursor/x2 LDZ2 .Screen/x DEO2
	.cursor/y2 LDZ2 .Screen/y DEO2
	#40 .Screen/sprite DEO

JMP2r

@on-console ( -> )

	#00 ;draw-filepath JSR2
	( start )
	[ LIT &listening $1 ] ,&no-start JCN
		#01 ,&listening STR
		;filepath #0040 ;mclr JSR2
		&no-start
	( end )
	.Console/read DEI
	DUP DUP #1f GTH SWP #7f LTH AND ,&no-end JCN
		#00 ,&listening STR
		&no-end
	( capture )
	,capture-trap JSR
	#06 ;draw-filepath JSR2

BRK

@on-button-trap ( -> )

	#00 ;draw-filepath JSR2
	.Controller/key DEI DUP #0d EQU #03 MUL SUB ,capture-trap JSR
	#06 ;draw-filepath JSR2

BRK

@capture-trap ( button -- )

	DUP ,&no-null JCN POP JMP2r &no-null
	[ #08 ] NEQk NIP ,&no-pop JCN ;filepath ;spop JSR2 POP JMP2r &no-pop
	[ #0a ] NEQk NIP ,&no-load JCN ;load-file JSR2 &no-load
	[ #7f ] NEQk NIP ,&no-delete JCN ;filepath #0040 ;mclr JSR2 POP JMP2r &no-delete
	[ #20 ] GTHk NIP ,&no-special JCN ;untrap JSR2 POP JMP2r &no-special
	;filepath ;slen JSR2 NIP #3f EQU ,&no-push JCN
		DUP ;filepath ;sput JSR2
		&no-push
	POP

JMP2r

@on-frame-trap ( -> )

	.state/timer LDZ
	DUP #07 AND ,&no-blink JCN
		DUP #03 SFT #01 AND #10 SFT #06 ADD ;draw-filepath JSR2
		&no-blink
	INC .state/timer STZ

BRK

@on-frame ( -> )

	( inactive )

BRK

@on-mouse-trap ( -> )

	( release trap on touch )
	.Mouse/state DEI #00 NEQ JMP BRK

	;untrap JSR2

BRK

@on-mouse ( -> )

	;draw-cursor JSR2
	( when drag&release )
	.cursor/drag LDZ #00 EQU ,&no-release JCN
	.Mouse/state DEI #00 NEQ ,&no-release JCN
		;stop-drag JSR2 BRK
		&no-release
	( route touch )
	.Mouse/x DEI2 .Mouse/y DEI2
	( on drag )
	.cursor/drag LDZ #00 GTH .Mouse/state DEI #00 GTH AND ,on-drag JCN
	( on panel )
	OVR2 OVR2 .panel ;within-rect JSR2 ;on-touch-panel JCN2
	.zoom/active LDZ ,&skip-handles JCN
		OVR2 OVR2 .viewport-handle ;within-rect JSR2 ;on-touch-viewport-handle JCN2
		OVR2 OVR2 .viewport-label ;within-rect JSR2 ;on-touch-viewport-label JCN2
		OVR2 OVR2 .surface-handle ;within-rect JSR2 ;on-touch-surface-handle JCN2
		OVR2 OVR2 .surface ;within-rect JSR2 ;on-touch-surface JCN2
		&skip-handles
	( on default )
	OVR2 OVR2 .viewport ;within-rect JSR2 ;on-touch-viewport JCN2
	POP2 POP2

BRK

( drag handlers )

@stop-drag ( -- )

	( release )
	#00 .cursor/drag STZ

JMP2r

@on-drag ( x* y* -> )

	( get event )
	.cursor/drag LDZ #08 ADD LDZ2	JMP2

BRK

@start-drag ( rect -- )

	( set frame )
	.cursor/drag STZ
	.Mouse/x DEI2 .cursor/x1 STZ2
	.Mouse/y DEI2 .cursor/y1 STZ2

JMP2r

@on-drag-panel ( x* y* -> )

	;clear-panel JSR2
	;draw-viewport JSR2
	DUP2 .cursor/y1 LDZ2 SUB2 STH2 .cursor/y1 STZ2
		.panel/y LDZ2 STH2r ADD2 STH2
	DUP2 .cursor/x1 LDZ2 SUB2 STH2 .cursor/x1 STZ2
		.panel/x LDZ2 STH2r ADD2 STH2r
		;set-panel-position JSR2

BRK

@on-drag-viewport-handle ( x* y* -> )

	.viewport/y LDZ2 SUB2 #0008 ADD2 #03 SFT2 NIP STH
	.viewport/x LDZ2 SUB2 #0008 ADD2 #03 SFT2 NIP STHr
		;set-viewport-size JSR2
	;draw-panel JSR2

BRK

@on-drag-viewport-label ( x* y* -> )

	;clear-viewport JSR2
	DUP2 .cursor/y1 LDZ2 SUB2 STH2 .cursor/y1 STZ2
		.viewport/y LDZ2 STH2r ADD2 STH2
	DUP2 .cursor/x1 LDZ2 SUB2 STH2 .cursor/x1 STZ2
		.viewport/x LDZ2 STH2r ADD2 STH2r
		;set-viewport-position JSR2
	;draw-panel JSR2

BRK

@on-drag-surface-handle ( x* y* -> )

	#00 .viewport/h LDZ #01 SFT #30 SFT2 .viewport/y LDZ2 ADD2 SUB2 #02 SFT2 NIP STH
	#00 .viewport/w LDZ #01 SFT #30 SFT2 .viewport/x LDZ2 ADD2 SUB2 #02 SFT2 NIP STHr
		;set-surface-size JSR2

BRK

@on-touch-panel ( x* y* -> )

	.Mouse/state DEI ,&on-click JCN
		POP2 POP2 BRK
		&on-click
	.panel/y LDZ2 #0003 ADD2 SUB2 #000a DIV2 NIP STH
	.panel/x LDZ2 SUB2 #000a DIV2 NIP STHr
	( within x )
	OVR #02 LTH ,&valid JCN POP2 BRK &valid
	( within y )
	DUP #03 EQU ,&drag JCN
	DUP #08 EQU ,&drag JCN
	( release when not drag )
	#00 .Mouse/state DEO
	DUP #03 LTH ,&tool JCN
	DUP #03 GTH OVR #08 LTH AND ,&patt JCN
	DUP #07 GTH OVR #0d LTH AND ,&size JCN

BRK
	&tool #10 SFT ADD ;select-tool JSR2 BRK
	&patt #04 SUB #10 SFT ADD ;select-patt JSR2 BRK
	&size #09 SUB #10 SFT ADD ;select-size JSR2 BRK
	&drag POP2 .panel ;start-drag JSR2 BRK

@get-length ( -- length* )

	#00 .surface/h LDZ #00 .surface/w LDZ MUL2 #30 SFT2

JMP2r

@get-tool ( -- ptr* )

	( set erase from right-click/mode )
	[ ;remove-pixel ;add-pixel ] .Mouse/state DEI #01 GTH .brush/mode LDZ ADD #01 JCN SWP2 POP2 .brush/oper STZ2
	( get function )
	#00 .Mouse/state DEI #00 GTH #10 SFT .cursor/last LDZ #00 GTH ADD #10 SFT .brush/tool LDZ #30 SFT ADD ;tools ADD2 LDA2
	( record state )
	.Mouse/state DEI .cursor/last STZ

JMP2r

@on-touch-surface ( x* y* -> )

	,get-tool JSR STH2
	( canvas offset )
	.surface/y LDZ2 SUB2 SWP2
	.surface/x LDZ2 SUB2 SWP2
		STH2r JMP2

BRK

@on-touch-viewport ( x* y* -- )

	.zoom/active LDZ #00 EQU ,&cancel JCN
	,get-tool JSR STH2
	( canvas offset )
	.viewport/y LDZ2 SUB2 #03 SFT2 .zoom/y LDZ2 ADD2 SWP2
	.viewport/x LDZ2 SUB2 #03 SFT2 .zoom/x LDZ2 ADD2 SWP2
		STH2r JMP2

BRK
	&cancel POP2 POP2 BRK

@on-touch-viewport-handle ( x* y* -- )

	POP2 POP2
	.Mouse/state DEI #00 NEQ JMP BRK
	.viewport-handle ;start-drag JSR2

BRK

@on-touch-viewport-label ( x* y* -- )

	POP2 POP2
	.Mouse/state DEI #00 NEQ JMP BRK
	.viewport-label ;start-drag JSR2

BRK

@on-touch-surface-handle ( x* y* -- )

	POP2 POP2
	.Mouse/state DEI #00 NEQ JMP BRK
	.surface-handle ;start-drag JSR2

BRK

@on-button ( -> )

	.Controller/button DEI
		DUP #01 AND ;on-button-ctrl JCN2
		DUP #f0 AND ;on-button-arrow JCN2
		DUP #04 NEQ ,&no-shift JCN
			;toggle-zoom JSR2
			&no-shift
		DUP #08 NEQ ,&no-esc JCN
			.brush/mode LDZk #00 EQU SWP STZ
			;draw-sizepane JSR2
			&no-esc
	POP

	.Controller/key DEI
	#00 NEQk NIP ,&continue JCN POP BRK &continue
	#09 NEQk NIP ,&no-invert JCN POP ;invert JSR2 BRK &no-invert
	#20 NEQk NIP ,&no-space JCN ;toggle-zoom JSR2 &no-space
	LIT 'q NEQk NIP ,&no-qkey JCN #00 ;select-tool JSR2 &no-qkey
	LIT 'w NEQk NIP ,&no-wkey JCN #01 ;select-tool JSR2 &no-wkey
	LIT 'e NEQk NIP ,&no-ekey JCN #02 ;select-tool JSR2 &no-ekey
	LIT 'r NEQk NIP ,&no-rkey JCN #03 ;select-tool JSR2 &no-rkey
	LIT 't NEQk NIP ,&no-tkey JCN #04 ;select-tool JSR2 &no-tkey
	LIT 'y NEQk NIP ,&no-ykey JCN #05 ;select-tool JSR2 &no-ykey
	LIT '[ NEQk NIP ,&no-lbracket JCN .brush/size LDZ #01 SUB ;select-size JSR2 &no-lbracket
	LIT '] NEQk NIP ,&no-rbracket JCN .brush/size LDZ INC ;select-size JSR2 &no-rbracket
	DUP
		DUP #30 GTH SWP #39 LTH #0101 NEQ2 ,&no-numkey JCN
		( size ) DUP #31 SUB ;select-patt JSR2 &no-numkey
	POP

BRK

@on-button-ctrl ( button -> )

	POP
	.Controller/key DEI
	( new/rename/open/save )
	[ LIT 'n ] NEQk NIP ,&no-new JCN ;new-file JSR2 POP BRK &no-new
	[ LIT 'r ] NEQk NIP ,&no-name JCN ;trap JSR2 POP BRK &no-name
	[ LIT 'o ] NEQk NIP ,&no-open JCN ;load-file JSR2 POP BRK &no-open
	[ LIT 's ] NEQk NIP ,&no-save JCN ;save-file JSR2 POP BRK &no-save
	POP

BRK

@on-button-arrow ( button -> )

	.zoom/active LDZ ,&is-zoom JCN POP BRK &is-zoom

	DUP #10 AND #00 EQU ,&no-u JCN .zoom/y LDZ2k #0001 SUB2 ROT STZ2 &no-u
	DUP #20 AND #00 EQU ,&no-d JCN .zoom/y LDZ2k INC2 ROT STZ2 &no-d
	DUP #40 AND #00 EQU ,&no-l JCN .zoom/x LDZ2k #0001 SUB2 ROT STZ2 &no-l
	DUP #80 AND #00 EQU ,&no-r JCN .zoom/x LDZ2k INC2 ROT STZ2 &no-r
	POP
	;draw-surface JSR2

BRK

( helpers )

@select-tool ( tool -- )

	.brush/tool STZ
	;draw-toolpane JSR2

JMP2r

@select-patt ( patt -- )

	#07 AND
	.brush/patt STZ
	( select brush )
	.brush/tool LDZ ,&no-switch JCN
		#01 ,select-tool JSR
		&no-switch
	;draw-pattpane JSR2

JMP2r

@select-size ( size -- )

	#07 AND
	( toggle mode on reselection )
	DUP .brush/size LDZ NEQ ,&no-toggle JCN
		.brush/mode LDZk #00 EQU SWP STZ
		&no-toggle
	.brush/size STZ
	( select brush )
	.brush/tool LDZ ,&no-switch JCN
		#01 ,select-tool JSR
		&no-switch
	;draw-sizepane JSR2

JMP2r

@toggle-zoom ( -- )

	.zoom/active LDZk #00 EQU SWP STZ
	;draw-viewport JSR2
	;draw-panel JSR2

JMP2r

@invert ( -- )

	;data STH2k ;get-length JSR2 ADD2 STH2r
	&loop
		( load ) STH2k LDAk #ff EOR
		( save ) STH2r STA
		INC2 GTH2k ,&loop JCN
	POP2 POP2
	;draw-surface JSR2

JMP2r

@set-viewport-size ( w h -- )

	( only redraw on change )
	DUP2 .viewport/size LDZ2 EQU2 ,&cancel JCN
	( limit size )
	DUP #01 LTH ,&cancel JCN
	OVR #01 LTH ,&cancel JCN
	DUP .Screen/height DEI2 #03 SFT2 NIP #04 SUB GTH ,&cancel JCN
	OVR .Screen/width DEI2 #03 SFT2 NIP #07 SUB GTH ,&cancel JCN

	;clear-viewport JSR2
	DUP .viewport/h STZ #00 SWP #30 SFT2 .viewport/y LDZ2 ADD2 .viewport/y2 STZ2
	DUP .viewport/w STZ #00 SWP #30 SFT2 .viewport/x LDZ2 ADD2 .viewport/x2 STZ2
	;center-surface JSR2

JMP2r
	&cancel POP2 JMP2r

@set-panel-position ( x* y* -- )

	DUP2 .panel/y STZ2 #0088 ADD2 .panel/y2 STZ2
	DUP2 .panel/x STZ2 #0018 ADD2 .panel/x2 STZ2
	;draw-panel JSR2

JMP2r

@set-viewport-position ( x* y* -- )

	DUP2 .viewport/y STZ2 #00 .viewport/h LDZ #30 SFT2 ADD2 .viewport/y2 STZ2
	DUP2 .viewport/x STZ2 #00 .viewport/w LDZ #30 SFT2 ADD2 .viewport/x2 STZ2
	;center-surface JSR2

JMP2r

@set-surface-size ( w h -- )

	( only redraw on change )
	DUP2 .surface/size LDZ2 EQU2 ,&cancel JCN
	( limit size )
	DUP #01 LTH ,&cancel JCN
	OVR #01 LTH ,&cancel JCN
	DUP #7f GTH ,&cancel JCN
	OVR #7f GTH ,&cancel JCN

	.surface/h STZ
	.surface/w STZ

	,center-surface JSR

JMP2r
	&cancel POP2 JMP2r

@center-surface ( -- )

	.viewport/w LDZ .surface/w LDZ INC GTH ,&center-x JCN
		.viewport/x LDZ2 .surface/x STZ2
		.viewport/x2 LDZ2 .surface/x2 STZ2
		,&resume-x JMP
		&center-x
	( center )
	.viewport/x LDZ2 STH2k
		.viewport/x2 LDZ2 STH2r SUB2 #00 .surface/w LDZ #30 SFT2 STH2k SUB2 #01 SFT2 ADD2
		DUP2 .surface/x STZ2
			STH2r #0001 SUB2 ADD2 .surface/x2 STZ2
	&resume-x
	.viewport/h LDZ .surface/h LDZ INC GTH ,&center-y JCN
		.viewport/y LDZ2 .surface/y STZ2
		.viewport/y2 LDZ2 .surface/y2 STZ2
		,&resume-y JMP
		&center-y
	.viewport/y LDZ2 STH2k
		.viewport/y2 LDZ2 STH2r SUB2 #00 .surface/h LDZ #30 SFT2 STH2k SUB2 #01 SFT2 ADD2
		DUP2 .surface/y STZ2
			STH2r #0001 SUB2 ADD2 .surface/y2 STZ2
	&resume-y
	( viewport handle )
	.viewport/x2 LDZ2 #0008 SUB2 DUP2 .viewport-handle/x STZ2 #0008 ADD2 .viewport-handle/x2 STZ2
	.viewport/y2 LDZ2 #0008 SUB2 DUP2 .viewport-handle/y STZ2 #0008 ADD2 .viewport-handle/y2 STZ2
	( surface handle )
	.surface/x2 LDZ2 DUP2 .surface-handle/x STZ2 #0008 ADD2 .surface-handle/x2 STZ2
	.surface/y2 LDZ2 DUP2 .surface-handle/y STZ2 #0008 ADD2 .surface-handle/y2 STZ2
	( label handle )
	.viewport/x LDZ2 .viewport-label/x STZ2
	.viewport/x2 LDZ2 .viewport-label/x2 STZ2
	.viewport/y LDZ2 DUP2 #0008 SUB2 .viewport-label/y STZ2 .viewport-label/y2 STZ2
	;draw-viewport JSR2

JMP2r

@paint-line ( x1* y1* x#10 SFT y#10 SFT -- )

	( load ) .line/y1 STZ2 .line/x1 STZ2 .line/y2 STZ2 .line/x2 STZ2

	.line/x1 LDZ2 .line/x2 LDZ2 SUB2 ;abs2 JSR2 .line/dx STZ2
	#0000 .line/y1 LDZ2 .line/y2 LDZ2 SUB2 ;abs2 JSR2 SUB2 .line/dy STZ2
	#ffff #00 .line/x2 LDZ2 .line/x1 LDZ2 ;lts2 JSR2 #10 SFT2 ADD2 .line/sx STZ2
	#ffff #00 .line/y2 LDZ2 .line/y1 LDZ2 ;lts2 JSR2 #10 SFT2 ADD2 .line/sy STZ2
	.line/dx LDZ2 .line/dy LDZ2 ADD2 .line/e1 STZ2
	&loop
		( paint ) .line/x2 LDZ2 .line/y2 LDZ2 .brush/oper LDZ2 JSR2
		.line/x2 LDZ2 .line/y2 LDZ2 ;draw-tile JSR2
		.line/x2 LDZ2 .line/x1 LDZ2 EQU2 .line/y2 LDZ2 .line/y1 LDZ2 EQU2 AND ,&end JCN
		.line/e1 LDZ2 #10 SFT2 .line/e2 STZ2
		.line/e2 LDZ2 .line/dy LDZ2 ;lts2 JSR2 ,&skipy JCN
			.line/e1 LDZ2 .line/dy LDZ2 ADD2 .line/e1 STZ2
			.line/x2 LDZ2 .line/sx LDZ2 ADD2 .line/x2 STZ2
			&skipy
		.line/e2 LDZ2 .line/dx LDZ2 ;gts2 JSR2 ,&skipx JCN
			.line/e1 LDZ2 .line/dx LDZ2 ADD2 .line/e1 STZ2
			.line/y2 LDZ2 .line/sy LDZ2 ADD2 .line/y2 STZ2
			&skipx
		;&loop JMP2
	&end

JMP2r

@paint-rect ( -- )

	.cursor/y2 LDZ2 .cursor/y1 LDZ2 ( flip sign ) GTH2k JMP SWP2
	&ver
		STH2k
		.cursor/x2 LDZ2 .cursor/x1 LDZ2 ( flip sign ) GTH2k JMP SWP2
		&hor
			DUP2 STH2kr ;patternize JSR2 #00 EQU ,&no-pixel JCN
				DUP2 STH2kr .brush/oper LDZ2 JSR2
				&no-pixel
			INC2 OVR2 OVR2 ;gts2 JSR2 ,&hor JCN
		POP2 POP2 POP2r
		INC2 OVR2 OVR2 ;gts2 JSR2 ,&ver JCN
	POP2 POP2
	;draw-surface JSR2

JMP2r

@paint-brush ( x* y* -- )

	STH2 STH2
	#08 #00
	&ver
		#08 #00
		&hor
			OVR2 NIP OVR SWP
			DUP2 STH STH ;size-icns #00 .brush/size LDZ #30 SFT2 ADD2 #00 STHr ADD2 LDA #07 STHr SUB SFT #01 AND #00 EQU ,&skip JCN
			DUP2 [ #00 SWP ROT #00 SWP SWP2 ] STH2kr SWP2r STH2kr SWP2r ROT2 ADD2 ROT2 ROT2 ADD2 SWP2 OVR2 OVR2 ;patternize JSR2 #00 EQU ,&no-pixel JCN
					OVR2 OVR2 .brush/oper LDZ2 JSR2
					;draw-tile JSR2
					,&skip JMP
					&no-pixel
					POP2 POP2
				&skip
				POP2
			INC GTHk ,&hor JCN
			POP2
		INC GTHk ,&ver JCN
	POP2
	POP2r POP2r

JMP2r

@patternize ( x* y* -- )

	STH2 STH2
	.brush/patt LDZ
	DUP ,&noplain JCN
		POP POP2r POP2r
		#01 JMP2r &noplain
	DUP #01 NEQ ,&notone1 JCN
		POP OVR2r OVR2r
		STH2r STH2r ADD2 #0001 AND2 #0000 EQU2
		STH2r STH2r SUB2 #0001 AND2 #0000 EQU2
		AND JMP2r &notone1
	DUP #02 NEQ ,&notone2 JCN
		POP OVR2r OVR2r
		STH2r STH2r ADD2 #0003 AND2 #0000 EQU2
		STH2r STH2r SUB2 #0003 AND2 #0000 EQU2
		AND JMP2r &notone2
	DUP #03 NEQ ,&notone3 JCN
		POP OVR2r OVR2r
		STH2r STH2r ADD2 #0005 AND2 #0000 EQU2
		STH2r STH2r SUB2 #0005 AND2 #0000 EQU2
		AND JMP2r &notone3
	DUP #04 NEQ ,&notone4 JCN
		POP STH2r STH2r
		ADD2 #0003 AND2 #0000 EQU2 JMP2r &notone4
	DUP #05 NEQ ,&notone5 JCN
		POP STH2r STH2r
		SUB2 #0003 AND2 #0000 EQU2 JMP2r &notone5
	DUP #06 NEQ ,&notone6 JCN
		POP SWP2r POP2r STH2r
		#0001 AND2 NIP JMP2r &notone6
	DUP #07 NEQ ,&notone7 JCN
		POP POP2r STH2r
		#0001 AND2 NIP JMP2r &notone7
	POP POP2r POP2r
	#00

JMP2r

@paint-magic ( x* y* -- )

	STH2 STH2
	.brush/size LDZ #00
	&ver
		.brush/size LDZ #00
		&hor
			OVR2 NIP OVR SWP [ #00 SWP ROT #00 SWP ]
			STH2kr SWP2r STH2kr SWP2r ROT2 ADD2 ROT2 ROT2 ADD2 SWP2
			( skip blanks )
			OVR2 OVR2 ;get-pixel JSR2 #00 EQU ,&blank JCN
				OVR2 OVR2 ,clean-pixel JSR
				OVR2 OVR2 ;draw-tile JSR2
				&blank
			POP2 POP2
			INC GTHk ,&hor JCN
			POP2
		INC GTHk ,&ver JCN
	POP2
	POP2r POP2r

JMP2r

@clean-pixel ( x* y* -- )

	( get neighbors )
	OVR2 OVR2 #0001 SUB2 ,get-pixel JSR STH
	OVR2 INC2 OVR2 ,get-pixel JSR #10 SFT STH ADDr
	OVR2 OVR2 INC2 ,get-pixel JSR #20 SFT STH ADDr
	OVR2 #0001 SUB2 OVR2 ,get-pixel JSR #30 SFT STH ADDr
	STHr
	DUP #03 EQU ,&remove JCN
	DUP #06 EQU ,&remove JCN
	DUP #09 EQU ,&remove JCN
	DUP #0c EQU ,&remove JCN
	POP POP2 POP2 JMP2r
	&remove
		POP ;remove-pixel JSR2 JMP2r

JMP2r

@get-pixel ( x* y* -- b )

	,within-surface JSR ,&continue JCN
		POP2 POP2 #01 JMP2r
		&continue

	( keep x* ) OVR2 NIP #07 AND STH
	( get byte ) ,get-row JSR LDA
	( flag ) #07 STHr SUB SFT #01 AND

JMP2r

@set-pixel ( x* y* color -- )

	,add-pixel JCN
	,remove-pixel JMP

JMP2r

@add-pixel ( x* y* -- )

	,within-surface JSR ,&continue JCN
		POP2 POP2 JMP2r
		&continue

	( keep x* ) OVR2 NIP #07 AND STH
	( get byte ) ,get-row JSR LDAk
	( mask ) #01 #07 STHr SUB #40 SFT SFT ORA
	( save ) ROT ROT STA

JMP2r

@remove-pixel ( x* y* -- )

	,within-surface JSR ,&continue JCN
		POP2 POP2 JMP2r
		&continue

	( keep x* ) OVR2 NIP #07 AND STH
	( get byte ) ,get-row JSR LDAk
	( mask ) #01 #07 STHr SUB #40 SFT SFT #ff EOR AND
	( save ) ROT ROT STA

JMP2r

@within-surface ( x* y* -- x* y* flag )

	( clamp ) DUP2 #03 SFT2 NIP .surface/h LDZ #01 SUB GTH ,&skip JCN
	( clamp ) OVR2 #03 SFT2 NIP .surface/w LDZ #01 SUB GTH ,&skip JCN
	#01 JMP2r
	&skip
		#00 JMP2r

JMP2r

@get-row ( x* y* -- row* )

	STH2k
		#03 SFT2 SWP2
		#03 SFT2 SWP2
		#00 .surface/w LDZ MUL2 ADD2 #30 SFT2
	STH2r
		#0007 AND2 ADD2
	;data ADD2

JMP2r

( file )

@new-file ( path* -- )

	#00 ;draw-filepath JSR2
	( rename to untitled.txt )
	;filepath #0020 ;mclr JSR2
	;untitled-txt ;filepath #000c ;mcpy JSR2
	( erase data )
	;data ;get-length JSR2 ;mclr JSR2
	#00 .state/changed STZ ;draw-filestate JSR2
	( draw )
	;draw-viewport JSR2

JMP2r

@load-file ( -- )

	( erase data )
	;data ;get-length JSR2 ;mclr JSR2
	#00 .state/changed STZ ;draw-filestate JSR2
	;filepath ;scap JSR2 #0003 SUB2 ;&tga-ext ;scmp JSR2 ;load-file-tga JCN2
	( load )
	;filepath .File/name DEO2
	#fff0 ;data SUB2 .File/length DEO2
	;data .File/read DEO2
	( capture size )
	;filepath ;scap JSR2 #0009 SUB2 ;read-size JSR2
	( draw )
	;draw-viewport JSR2

JMP2r
	&tga-ext "tga $1

@save-file ( path* -- )

	;filepath .File/name DEO2
	;get-length JSR2 .File/length DEO2
	;data .File/write DEO2
	( draw )
	;draw-viewport JSR2

JMP2r

@read-size ( 00x00* -- )

	DUP2 ;sbyte JSR2 #00 EQU ,&cancel JCN
	DUP2 #0002 ADD2 LDA LIT 'x NEQ ,&cancel JCN
	DUP2 #0003 ADD2 ;sbyte JSR2 #00 EQU ,&cancel JCN
	( y ) DUP2 #0003 ADD2 ;sbyte JSR2 STH
	( x ) ;sbyte JSR2 STHr
		;set-surface-size JSR2

JMP2r
	&cancel POP2 JMP2r

( Drawing )

@draw-viewport ( -- )

	.viewport/size LDZ2 #0000 GTH2 JMP JMP2r

	.viewport/x LDZ2 #0008 SUB2 .viewport/y LDZ2 #0008 SUB2 .viewport/w LDZ .viewport/h LDZ ;frame-inline-chrs ;draw-frame JSR2

	( titlebar )
	;draw-filestate JSR2
	#06 ;draw-filepath JSR2

@draw-surface ( -- )

	.surface/size LDZ2 #0000 GTH2 JMP JMP2r

	.zoom/active LDZ ;draw-surface-zoom JCN2

	#05 .Screen/auto DEO
	;data .Screen/addr DEO2
	.surface/y LDZ2 .Screen/y DEO2
	.surface/h LDZ .viewport/h LDZ LTHk JMP SWP POP #00
	&ver
		#00 OVR #00 .surface/w LDZ MUL2 #30 SFT2 ;data ADD2 .Screen/addr DEO2
		.surface/x LDZ2 .Screen/x DEO2
		.surface/w LDZ .viewport/w LDZ LTHk JMP SWP POP #00
		&hor
			#09 .Screen/sprite DEO
			INC GTHk ,&hor JCN
		POP2
		.Screen/y DEI2k #0008 ADD2 ROT DEO2
		INC GTHk ,&ver JCN
	POP2

	;draw-filesize JSR2

	.surface/w LDZ .viewport/w LDZ #02 SUB GTH ,&no-handle JCN
	.surface/h LDZ .viewport/h LDZ #02 SUB GTH ,&no-handle JCN
	.surface/size LDZ2 #0000 EQU2 ,&no-handle JCN
		( draw surface handle )
		;surface-handle-icn .Screen/addr DEO2
		.surface-handle/x LDZ2 .Screen/x DEO2
		.surface-handle/y LDZ2 .Screen/y DEO2
		#0f .Screen/sprite DEO
		&no-handle

	( draw viewport handle )
	;viewport-handle-icn .Screen/addr DEO2
	.viewport/x2 LDZ2 #0008 SUB2 .Screen/x DEO2
	.viewport/y2 LDZ2 #0008 SUB2 .Screen/y DEO2
	#05 .Screen/sprite DEO

JMP2r

@draw-surface-zoom ( -- )

	#01 .Screen/auto DEO
	.viewport/y LDZ2 .Screen/y DEO2
	.viewport/h LDZ #00
	&ver
		STHk
		.viewport/x LDZ2 .Screen/x DEO2
		.viewport/w LDZ #00
		&hor
			( get pixel )
			( y ) #00 STHkr .zoom/y LDZ2 ADD2 STH2
			( x ) #00 OVR .zoom/x LDZ2 ADD2 STH2r
			;get-pixel JSR2 #00 SWP #30 SFT2 ;bigpixel-icns ADD2 .Screen/addr DEO2
			#09 .Screen/sprite DEO
			INC GTHk ,&hor JCN
		POP2
		POPr
		.Screen/y DEI2 #0008 ADD2 .Screen/y DEO2
		INC GTHk ,&ver JCN
	POP2

JMP2r

@draw-tile ( x* y* -- )

	.zoom/active LDZ ,draw-tile-zoom JCN
	( bounds )
	DUP2 #00 .surface/h LDZ #30 SFT2 #0001 SUB2 GTH2 ,&cancel JCN
	OVR2 #00 .surface/w LDZ #30 SFT2 #0001 SUB2 GTH2 ,&cancel JCN
	( paint )
	#33 SFT2 SWP2 #33 SFT2 SWP2
	OVR2 OVR2 ;get-row JSR2 .Screen/addr DEO2
	.surface/y LDZ2 ADD2 .Screen/y DEO2
	.surface/x LDZ2 ADD2 .Screen/x DEO2
	#09 .Screen/sprite DEO

JMP2r
	&cancel POP2 POP2 JMP2r

@draw-tile-zoom ( x* y* -- )

	( bounds )
	DUP2 .zoom/y LDZ2 SUB2 #00 .viewport/h LDZ #01 SUB GTH2 ,&cancel JCN
	OVR2 .zoom/x LDZ2 SUB2 #00 .viewport/w LDZ #01 SUB GTH2 ,&cancel JCN
	( paint )
	OVR2 OVR2 ;get-pixel JSR2 #00 SWP #30 SFT2 ;bigpixel-icns ADD2 .Screen/addr DEO2
	.zoom/y LDZ2 SUB2 #30 SFT2 .viewport/y LDZ2 ADD2 .Screen/y DEO2
	.zoom/x LDZ2 SUB2 #30 SFT2 .viewport/x LDZ2 ADD2 .Screen/x DEO2
	#09 .Screen/sprite DEO

JMP2r
	&cancel POP2 POP2 JMP2r

@draw-cursor ( -- )

	( clear brush size )
	.cursor/x2 LDZ2
	.cursor/y2 LDZ2
	( clear size cursor )
	OVR2 OVR2
	#0003 SUB2 .Screen/y DEO2
	#0003 SUB2 .Screen/x DEO2
	#40 .Screen/sprite DEO
	( clear last cursor )
	#40 ;draw-pointer JSR2

	( record cursor positions )
	.Mouse/x DEI2 .cursor/x2 STZ2
	.Mouse/y DEI2 .cursor/y2 STZ2

	( draw size cursor )
	.brush/tool LDZ DUP #01 EQU SWP #03 EQU #0000 EQU2 ;&outside-canvas JCN2
	( outside canvas )
	.Mouse/x DEI2 .Mouse/y DEI2 .surface ;within-rect JSR2 #00 EQU ;&outside-canvas JCN2
		.cursor/x2 LDZ2 #0003 SUB2 .Screen/x DEO2
		.cursor/y2 LDZ2 #0003 SUB2 .Screen/y DEO2
		;brush-icns #00 .brush/size LDZ #30 SFT2 ADD2 .Screen/addr DEO2
		.Mouse/state DEI #00 NEQ DUP #10 SFT #41 ADD .Screen/sprite DEO
		#00 EQU ,&outside-canvas JCN JMP2r
	&outside-canvas

	( draw new cursor )
	.cursor/x2 LDZ2
	.cursor/y2 LDZ2
	#4143 .Mouse/state DEI #01 JCN SWP POP
		,draw-pointer JSR

JMP2r

@draw-pointer ( x* y* color -- )

	STH
	.Screen/y DEO2
	.Screen/x DEO2
	;pointers-icns .Screen/addr DEO2
	STHr .Screen/sprite DEO

JMP2r

@clear-panel ( -- )

	.panel/x LDZ2 .Screen/x DEO2
	.panel/y LDZ2 .Screen/y DEO2
	#03 #11 #00 ;fill-rect JSR2

JMP2r

@clear-viewport ( -- )

	.viewport-label/x LDZ2 #0002 SUB2 .Screen/x DEO2
	.viewport-label/y LDZ2 #0002 SUB2 .Screen/y DEO2
	.viewport/w LDZ INC .viewport/h LDZ #02 ADD #00 ;fill-rect JSR2

JMP2r

@draw-panel ( -- )

	( frame )
	.panel/x LDZ2 .panel/y LDZ2 #01 #0f ;frame-outline-chrs ;draw-frame JSR2
	( tools )
	,draw-toolpane JSR
	.panel/x LDZ2 INC2 .panel/x2 LDZ2 .panel/y LDZ2 #0026 ADD2 #01 ,line-hor JSR
	,draw-pattpane JSR
	.panel/x LDZ2 INC2 .panel/x2 LDZ2 .panel/y LDZ2 #0058 ADD2 #01 ,line-hor JSR
	,draw-sizepane JSR

JMP2r

@line-hor ( x0* x1* y* color -- )

	STH .Screen/y DEO2 SWP2
	&loop
		( save ) DUP2 .Screen/x DEO2
		( draw ) STHkr .Screen/pixel DEO
		INC2 INC2 GTH2k ,&loop JCN
	POP2 POP2 POPr

JMP2r

@draw-toolpane ( -- )

	;tool-icns .Screen/addr DEO2
	#06 .brush/tool LDZ
	.panel/x LDZ2 #0004 ADD2
	.panel/y LDZ2 #0005 ADD2
		,draw-icons JSR

JMP2r

@draw-pattpane ( -- )

	;patt-icns .Screen/addr DEO2
	#08 .brush/patt LDZ
	.panel/x LDZ2 #0004 ADD2
	.panel/y LDZ2 #002d ADD2
		,draw-icons JSR

JMP2r

@draw-sizepane ( -- )

	#00 .brush/mode LDZ #60 SFT ;size-icns ADD2 .Screen/addr DEO2
	#08 .brush/size LDZ
	.panel/x LDZ2 #0004 ADD2
	.panel/y LDZ2 #005f ADD2
		,draw-icons JSR

JMP2r

@draw-icons ( length selection x* y* -- )

	#04 .Screen/auto DEO
	,&anchor-y STR2
	,&anchor-x STR2
	STH #00
	&loop
		#00 OVR #01 AND #09 MUL [ LIT2 &anchor-x $2 ] ADD2 .Screen/x DEO2
		#00 OVR #01 SFT #0a MUL [ LIT2 &anchor-y $2 ] ADD2 .Screen/y DEO2
		DUP STHkr EQU #10 SFT #09 ADD .Screen/sprite DEO
		INC GTHk ,&loop JCN
	POP2
	POPr

JMP2r

@draw-filestate ( -- )

	#04 .Screen/auto DEO
	.viewport-label/x LDZ2 .Screen/x DEO2
	.viewport-label/y LDZ2 #0002 SUB2 .Screen/y DEO2
	;save-icns .Screen/addr DEO2
	#01 .Screen/sprite DEO
	#0a .state/changed LDZ #05 MUL ADD .Screen/sprite DEO

JMP2r

@draw-filepath ( color -- )

	STH
	.viewport-label/x LDZ2 #0008 ADD2 .Screen/x DEO2
	.viewport-label/y LDZ2 #0002 SUB2 .Screen/y DEO2
	;filepath STHkr ;draw-str JSR2
	( cap )
	;save-icns/cap .Screen/addr DEO2
	STHr #00 NEQ .Screen/sprite DEO

JMP2r

@draw-filesize ( -- )

	.zoom/active LDZ #00 EQU #01 JCN JMP2r
	.viewport/w LDZ #05 GTH #01 JCN JMP2r
	.surface/y LDZ2 .viewport/y LDZ2 GTH2 #01 JCN JMP2r

	#01 .Screen/auto DEO
	.surface/x LDZ2 .Screen/x DEO2
	.surface/y LDZ2 #0008 SUB2 .Screen/y DEO2
	.surface/w LDZ #08 ;draw-byte JSR2
	LIT 'x #08 ;draw-char JSR2
	.surface/h LDZ #08 ;draw-byte JSR2

JMP2r

( strings )

@draw-str ( text* color -- )

	STH
	#01 .Screen/auto DEO
	&while
		LDAk STHkr ,draw-char JSR
		INC2 LDAk ,&while JCN
	POP2
	POPr

JMP2r

@draw-byte ( byte color -- )

	STH DUP #04 SFT STHkr ,draw-hex JSR STHr

@draw-hex ( char color -- )

	SWP #0f AND [ DUP #09 GTH #27 MUL ADD #30 ADD ] SWP

@draw-char ( char color -- )

	SWP #20 SUB #00 SWP #30 SFT2 ;font ADD2 .Screen/addr DEO2
	.Screen/sprite DEO

JMP2r

( ux )

@within-rect ( x* y* rect -- flag )

	STH
	( y LTH rect.y1 ) DUP2 STHkr #02 ADD LDZ2 ;lts2 JSR2 ,&skip JCN
	( y GTH rect.y2 ) DUP2 STHkr #06 ADD LDZ2 ;gts2 JSR2 ,&skip JCN
	SWP2
	( x LTH rect.x1 ) DUP2 STHkr LDZ2 ;lts2 JSR2 ,&skip JCN
	( x GTH rect.x2 ) DUP2 STHkr #04 ADD LDZ2 ;gts2 JSR2 ,&skip JCN
	POP2 POP2 POPr
	#01
JMP2r
	&skip
	POP2 POP2 POPr
	#00

JMP2r

@line-diag ( rect color -- )

	( color ) STH
	( x0 ) LDZ2k #0001 SUB2 .line-guide/x2 STZ2
	( y0 ) INC INC LDZ2k #0001 SUB2 .line-guide/y2 STZ2
	( x1 ) INC INC LDZ2k .line-guide/x1 STZ2
	( y1 ) INC INC LDZ2 .line-guide/y1 STZ2
	.line-guide/x1 LDZ2 .line-guide/x2 LDZ2 SUB2 ;abs2 JSR2 .line-guide/dx STZ2
	.line-guide/y1 LDZ2 .line-guide/y2 LDZ2 SUB2 ;abs2 JSR2 #0000 SWP2 SUB2 .line-guide/dy STZ2
	#ffff #00 .line-guide/x2 LDZ2 .line-guide/x1 LDZ2 ;lts2 JSR2 #10 SFT2 ADD2 .line-guide/sx STZ2
	#ffff #00 .line-guide/y2 LDZ2 .line-guide/y1 LDZ2 ;lts2 JSR2 #10 SFT2 ADD2 .line-guide/sy STZ2
	.line-guide/dx LDZ2 .line-guide/dy LDZ2 ADD2 .line-guide/e1 STZ2
	&loop
		( paint ) .line-guide/x2 LDZ2 .Screen/x DEO2 .line-guide/y2 LDZ2 .Screen/y DEO2 STHkr .Screen/pixel DEO
		.line-guide/x2 LDZ2 .line-guide/x1 LDZ2 EQU2 .line-guide/y2 LDZ2 .line-guide/y1 LDZ2 EQU2 AND ,&end JCN
		.line-guide/e1 LDZ2 #10 SFT2 .line-guide/e2 STZ2
		.line-guide/e2 LDZ2 .line-guide/dy LDZ2 ;lts2 JSR2 ,&skipy JCN
			.line-guide/e1 LDZ2 .line-guide/dy LDZ2 ADD2 .line-guide/e1 STZ2
			.line-guide/x2 LDZ2 .line-guide/sx LDZ2 ADD2 .line-guide/x2 STZ2
			&skipy
		.line-guide/e2 LDZ2 .line-guide/dx LDZ2 ;gts2 JSR2 ,&skipx JCN
			.line-guide/e1 LDZ2 .line-guide/dx LDZ2 ADD2 .line-guide/e1 STZ2
			.line-guide/y2 LDZ2 .line-guide/sy LDZ2 ADD2 .line-guide/y2 STZ2
			&skipx
		;&loop JMP2
	&end
	POPr

JMP2r

@guide-rect ( color -- )

	STH
	.guide/x2 LDZ2 .guide/x LDZ2 ( flip sign ) GTH2k JMP SWP2
	&hor
		DUP2 .Screen/x DEO2
		.guide/y LDZ2 .Screen/y DEO2 STHkr .Screen/pixel DEO
		.guide/y2 LDZ2 .Screen/y DEO2 STHkr .Screen/pixel DEO
		INC2 GTH2k ,&hor JCN
	POP2 POP2
	.guide/y2 LDZ2 .guide/y LDZ2 ( flip sign ) GTH2k JMP SWP2
	&ver
		DUP2 .Screen/y DEO2
		.guide/x LDZ2 .Screen/x DEO2 STHkr .Screen/pixel DEO
		.guide/x2 LDZ2 .Screen/x DEO2 STHkr .Screen/pixel DEO
		INC2 GTH2k ,&ver JCN
	POP2 POP2
	POPr

JMP2r

( Tools )

@tools
	:pencil/hover  :pencil/up  :pencil/down  :pencil/drag
	:marker/hover  :marker/up  :marker/down  :marker/drag
	:stroke/hover  :stroke/up  :stroke/down  :stroke/drag
	:magic/hover   :magic/up   :magic/down   :magic/drag
	:box/hover     :box/up     :box/down     :box/drag
	:magnify/hover :magnify/up :magnify/down :magnify/drag

@pencil ( x* y* -> )

	&down
		OVR2 OVR2 .cursor/y1 STZ2 .cursor/x1 STZ2
		OVR2 OVR2 .brush/oper LDZ2 JSR2
	&up
		;draw-tile JSR2
		#01 .state/changed STZ ;draw-filestate JSR2
		BRK
	&drag
		OVR2 OVR2 STH2 STH2
		.cursor/x1 LDZ2 .cursor/y1 LDZ2 STH2r STH2r
		;paint-line JSR2
		.cursor/y1 STZ2 .cursor/x1 STZ2
		BRK
	&hover
		POP2 POP2

BRK

@marker ( x* y* -> )

	&up
		POP2 POP2
		#01 .state/changed STZ ;draw-filestate JSR2 BRK
	&down
	&drag
		#0003 SUB2 SWP2 #0003 SUB2 SWP2
		;paint-brush JSR2
		BRK
	&hover
		POP2 POP2

BRK

@stroke ( x* y* -> )

	&down
		( clear cursor ) .cursor/x2 LDZ2 .cursor/y2 LDZ2 #40 ;draw-pointer JSR2
		( erase guide ) .guide #40 ;line-diag JSR2
		.cursor/y1 STZ2 .cursor/x1 STZ2
		BRK
	&up
		( clear cursor ) .cursor/x2 LDZ2 .cursor/y2 LDZ2 #40 ;draw-pointer JSR2
		( erase guide ) .guide #40 ;line-diag JSR2
		.cursor/y2 STZ2 .cursor/x2 STZ2
		.cursor/x1 LDZ2 .cursor/y1 LDZ2 .cursor/x2 LDZ2 .cursor/y2 LDZ2 ;paint-line JSR2
		#01 .state/changed STZ ;draw-filestate JSR2
		BRK
	&drag
		( clear cursor ) .cursor/x2 LDZ2 .cursor/y2 LDZ2 #40 ;draw-pointer JSR2
		( erase guide ) .guide #40 ;line-diag JSR2
		.cursor/y2 STZ2 .cursor/x2 STZ2
		( update guide )
		.cursor/x1 LDZ2 .cursor/y1 LDZ2 ;to-screen JSR2 INC2 .guide/y STZ2 INC2 .guide/x STZ2
		.cursor/x2 LDZ2 .cursor/y2 LDZ2 ;to-screen JSR2 .guide/y2 STZ2 .guide/x2 STZ2
		( erase guide ) .guide #43 ;line-diag JSR2
		BRK
	&hover
		POP2 POP2

BRK

@magic ( x* y* -> )

	&up
		#01 .state/changed STZ ;draw-filestate JSR2
	&down
	&drag
		#0003 SUB2 SWP2 #0003 SUB2 SWP2
		;paint-magic JSR2
		BRK
	&hover
		POP2 POP2

BRK

@box ( x* y* -> )

	&down
		( clear cursor ) .cursor/x2 LDZ2 .cursor/y2 LDZ2 #40 ;draw-pointer JSR2
		( erase guide ) #40 ;guide-rect JSR2
		.cursor/y1 STZ2 .cursor/x1 STZ2
		BRK
	&up
		( clear cursor ) .cursor/x2 LDZ2 .cursor/y2 LDZ2 #40 ;draw-pointer JSR2
		( erase guide ) #40 ;guide-rect JSR2
		.cursor/y2 STZ2 .cursor/x2 STZ2
		;paint-rect JSR2
		#01 .state/changed STZ ;draw-filestate JSR2
		BRK
	&drag
		( clear cursor ) .cursor/x2 LDZ2 .cursor/y2 LDZ2 #40 ;draw-pointer JSR2
		( erase guide ) #40 ;guide-rect JSR2
		.cursor/y2 STZ2 .cursor/x2 STZ2
		( update guide )
		.cursor/x1 LDZ2 .cursor/y1 LDZ2 ,to-screen JSR .guide/y STZ2 .guide/x STZ2
		.cursor/x2 LDZ2 .cursor/y2 LDZ2 ,to-screen JSR .guide/y2 STZ2 .guide/x2 STZ2
		( draw guide ) #43 ;guide-rect JSR2
		BRK
	&hover
		POP2 POP2

BRK

@to-screen ( x* y* -- x* y* )

	.zoom/active LDZ ,&on-zoom JCN
		.surface/y LDZ2 ADD2 SWP2
		.surface/x LDZ2 ADD2 SWP2
	JMP2r

	&on-zoom
		.zoom/y LDZ2 SUB2 #30 SFT2 .viewport/y LDZ2 ADD2 SWP2
		.zoom/x LDZ2 SUB2 #30 SFT2 .viewport/x LDZ2 ADD2 SWP2

JMP2r

@magnify ( x* y* -> )

	&down
		#00 .surface/h LDZ #01 SFT2 SUB2 .zoom/y STZ2
		#00 .surface/w LDZ #01 SFT2 SUB2 .zoom/x STZ2
		;toggle-zoom JSR2
		BRK
	&up
	&drag
	&hover
		POP2 POP2

BRK

@untitled-txt "untitled.icn $1

( frame )

@draw-frame ( x* y* w h sprite* -- )

	.Screen/addr DEO2
	,&h STR ,&w STR
	DUP2 .Screen/y DEO2 ,&y STR2
	DUP2 .Screen/x DEO2 ,&x STR2
	#01 .Screen/auto DEO
	#85 .Screen/sprite DEO
	,&next JSR [ LIT &w $1 ] ,&repeat JSR
	#02 .Screen/auto DEO
	,&next JSR #85 .Screen/sprite DEO
	,&next JSR [ LIT &h $1 ] ,&repeat JSR
	( left )
	[ LIT2 &y $2 ] #0008 ADD2 .Screen/y DEO2
	[ LIT2 &x $2 ] .Screen/x DEO2
	,&next JSR ,&h LDR ,&repeat JSR
	#01 .Screen/auto DEO
	,&next JSR #85 .Screen/sprite DEO
	,&next JSR ,&w LDR ,&repeat JSR
	,&next JSR #85 .Screen/sprite DEO
	( fill )
	,&next JSR
	,&x LDR2 #0008 ADD2 .Screen/x DEO2
	,&y LDR2 #0008 ADD2 .Screen/y DEO2
	,&w LDR ,&h LDR #81 ,fill-rect JSR

JMP2r
	&next
		.Screen/addr DEI2k #0010 ADD2 ROT DEO2
	JMP2r
	&repeat
		#00
		&repeat-loop
			#81 .Screen/sprite DEO
			INC GTHk ,&repeat-loop JCN
		POP2
	JMP2r

@fill-rect ( w h color -- )

	STH
	#01 .Screen/auto DEO
	.Screen/x DEI2 ,&anchor-x STR2
	SWP ,&w STR #00
	&ver
		[ LIT &w $1 ] #00
		&hor
			STHkr .Screen/sprite DEO
			INC GTHk ,&hor JCN
		POP2
		.Screen/y DEI2k #0008 ADD2 ROT DEO2
		[ LIT2 &anchor-x $2 ] .Screen/x DEO2
		INC GTHk ,&ver JCN
	POP2
	POPr

JMP2r

( theme )

@theme-txt ".theme $1

@load-theme ( -- )

	;theme-txt .File/name DEO2
	#0006 .File/length DEO2
	#fffa .File/read DEO2

	.File/success DEI2 #0006 NEQ2 ,&ignore JCN
		#fffa LDA2 .System/r DEO2
		#fffc LDA2 .System/g DEO2
		#fffe LDA2 .System/b DEO2
		&ignore

JMP2r

( hex parsing )

@sbyte ( str* -- byte )

	LDAk ,chex JSR STH
	INC2 LDA ,chex JSR
	STHr #40 SFT ADD

JMP2r

@chex ( char -- hex )

	DUP #2f GTH OVR #3a LTH AND ,&number JCN
	DUP #60 GTH OVR #67 LTH AND ,&lc JCN
	DUP #40 GTH OVR #47 LTH AND ,&uc JCN
		POP #00 JMP2r
	&number #30 SUB JMP2r
	&uc #37 SUB JMP2r
	&lc #57 SUB JMP2r

JMP2r

( memory generics )

@mclr ( addr* len* -- )

	OVR2 ADD2 SWP2
	&loop
		STH2k #00 STH2r STA
		INC2 GTH2k ,&loop JCN
	POP2 POP2

JMP2r

@mcpy ( src* dst* len* -- )

	SWP2 STH2
	OVR2 ADD2 SWP2
	&loop
		LDAk STH2kr STA INC2r
		INC2 GTH2k ,&loop JCN
	POP2 POP2
	POP2r

JMP2r

( string generics )

@slen ( str* -- len* )

	DUP2 ,scap JSR SWP2 SUB2

JMP2r

@scap ( str* -- end* )

	LDAk #00 NEQ JMP JMP2r
	&while INC2 LDAk ,&while JCN

JMP2r

@scpy ( src* dst* -- )

	STH2
	&while
		LDAk STH2kr STA INC2r
		INC2 LDAk ,&while JCN
	POP2
	#00 STH2r STA

JMP2r

@sput ( char str* -- )

	,scap JSR STA

JMP2r

@spop ( str* -- )

	LDAk ,&no-null JCN
		POP2 JMP2r &no-null
	#00 ROT ROT ,scap JSR #0001 SUB2 STA

JMP2r

@scmp ( a* b* -- flag )

	STH2
	&loop
		LDAk LDAkr STHr NEQ ,&end JCN
		LDAk LDAkr STHr ORA ,&not-end JCN
			POP2 POP2r #01 JMP2r
			&not-end
		INC2 INC2r ,&loop JMP
	&end
	POP2 POP2r #00

JMP2r

@abs2 DUP2 #0f SFT2 EQU #05 JCN #0000 SWP2 SUB2 JMP2r
@lts2 #8000 ADD2 SWP2 #8000 ADD2 GTH2 JMP2r
@gts2 #8000 ADD2 SWP2 #8000 ADD2 LTH2 JMP2r

( print )

@print ( short* -- )

	&short ( short* -- ) SWP ,&byte JSR
	&byte ( byte -- ) DUP #04 SFT ,&char JSR
	&char ( char -- ) #0f AND DUP #09 GTH #27 MUL ADD #30 ADD #18 DEO

JMP2r

@print-str ( str* -- )

	#0001 SUB2
	&while
		INC2 LDAk DUP #18 DEO ,&while JCN
	POP2

JMP2r

( tga parser )

%FLIP { STH2k LDA2 SWP STH2r STA2 }

@load-file-tga ( -- )

	( header )
	;filepath .File/name DEO2
	#0012 .File/length DEO2
	;image .File/read DEO2
	( flip endianness )
	;image/w FLIP ;image/h FLIP
	( resize canvas )
	;image/w LDA2 #03 SFT2 NIP ;image/h LDA2 #03 SFT2 NIP ;set-surface-size JSR2
	( get parser )
	;image/image-type LDA
	#02 NEQk NIP ,&no-raw-true JCN
		;pixel-raw-true #0004 ,parse-tga JSR POP JMP2r
		&no-raw-true
	#03 NEQk NIP ,&no-raw-bw JCN
		;pixel-raw-bw #0001 ,parse-tga JSR POP JMP2r
		&no-raw-bw
	( error )
	;&error-unknown-txt ;print-str JSR2
	[ #00 ;image/image-type LDA #10 SFT ] ;image-types ADD2 LDA2 ;print-str JSR2 #0a18 DEO

JMP2r
	&error-unknown-txt "Unsupported 20 "tga-type: 20 $1

@parse-tga ( filter* length* -- )

	.File/length DEO2 ,&filter STR2
	#01 .Screen/auto DEO
	#0000 ,&x STR2
	#0000 ,&y STR2
	&stream
		;&pixel STH2k .File/read DEO2
		[ LIT2 &x $2 ] [ LIT2 &y $2 ] STH2r [ LIT2 &filter $2 ] JSR2 #07 SFT ;set-pixel JSR2
		( move )
		,&x LDR2 INC2 DUP2 ,&x STR2 ;image/w LDA2 NEQ2 ,&continue JCN
			#0000 ,&x STR2
			,&y LDR2 INC2 ,&y STR2
			&continue
		.File/success DEI2 #0000 NEQ2 ,&stream JCN
	#00 .Screen/auto DEO
	( rename )
	;&icn-ext ;filepath ;scap JSR2 #0003 SUB2 ;scpy JSR2
	;draw-surface JSR2

JMP2r
	&pixel $4
	&icn-ext "icn $1

@pixel-raw-true ( pixel* -- color )

	STH2
	( b ) #00 STH2kr LDA INC2r
	( g ) #00 STH2kr LDA INC2r
	( r ) #00 STH2r LDA
	( res ) ADD2 ADD2 #0003 DIV2 NIP

JMP2r

@pixel-raw-bw ( pixel* -- color )

	( res ) LDA

JMP2r

@image-types-txts
	&no-image "no-data $1
	&raw-color "RAW-color $1
	&raw-true "RAW-true $1
	&raw-bw "RAW-bw $1
	&rle-color "RLE-color $1
	&rle-true "RLE-true $1
	&rle-bw "RLE-bw $1
	&unknown "unknown $1

@image-types
	:image-types-txts/no-image
	:image-types-txts/raw-color
	:image-types-txts/raw-true
	:image-types-txts/raw-bw
	:image-types-txts/unknown
	:image-types-txts/unknown
	:image-types-txts/unknown
	:image-types-txts/unknown
	:image-types-txts/unknown
	:image-types-txts/rle-color
	:image-types-txts/rle-true
	:image-types-txts/rle-bw

@image
	&id-length $1
	&color-map $1
	&image-type $1
	&map $5
	&x $2 &y $2
	&w $2 &h $2
	&depth $1
	&descriptor $1

( Assets )

@surface-handle-icn
	f8fc fcfc fc78 0000
@viewport-handle-icn
	0000 0001 0307 0f1f
@save-icns
	3f7f ffff ffff ffff
	0000 040e 1f0e 0400
	&cap
	fcfe ffff ffff ffff
@eyes-icns
	0000 0082 4438 0000
	0038 4492 2810 0000
@bigpixel-icns
	5580 0080 0080 0080
	55ff 7fff 7fff 7fff
@size-icns
	0000 0010 0000 0000
	0000 1038 1000 0000
	0000 3838 3800 0000
	0010 387c 3810 0000
	0038 7c7c 7c38 0000
	1038 7cfe 7c38 1000
	387c fefe fe7c 3800
	7cfe fefe fefe 7c00
	0000 0000 0000 0000
	0000 0010 0000 0000
	0000 1028 1000 0000
	0010 2844 2810 0000
	0038 4444 4438 0000
	1028 4482 4428 1000
	3844 8282 8244 3800
	7c82 8282 8282 7c00
@patt-icns
	fefe fefe fefe fe00
	fed6 aad6 aad6 fe00
	fe92 82d6 8292 fe00
	fe82 92aa 9282 fe00
	fea6 ca92 a6ca fe00
	feca a692 caa6 fe00
	feaa aaaa aaaa fe00
	fe82 fe82 fe82 fe00
@tool-icns
	c0e0 5028 140a 0400
	e0d0 a844 2212 0c00
	c0b8 4848 7804 0200
	a850 8850 a804 0200
	fc84 8480 84ea 0400
	3048 8484 4834 0200 ( zoom )
	3245 8284 4834 0200 ( zoom out )
@brush-icns
	0000 0010 0000 0000
	0000 1028 1000 0000
	0000 3828 3800 0000
	0010 2844 2810 0000
	0038 4444 4438 0000
	1028 4482 4428 1000
	3844 8282 8244 3800
	7c82 8282 8282 7c00
	7cfe fefe fefe 7c00
@pointers-icns
	80c0 e0f0 f8e0 1000
	2020 20b8 7c7c 3838
@frame-outline-chrs
	( tl ) 3f40 8080 8080 8080 003f 7f7f 7f7f 7f7f
	( tc ) ff00 0000 0000 0000 00ff ffff ffff ffff
	( tr ) fc02 0101 0101 0101 00fc fefe fefe fefe
	( mr ) 0101 0101 0101 0101 fefe fefe fefe fefe
	( ml ) 8080 8080 8080 8080 7f7f 7f7f 7f7f 7f7f
	( bl ) 8080 8080 8080 403f 7f7f 7f7f 7f7f 3f00
	( bc ) 0000 0000 0000 00ff ffff ffff ffff ff00
	( br ) 0101 0101 0101 02fc fefe fefe fefe fc00
	( mc ) 0000 0000 0000 0000 ffff ffff ffff ffff
@frame-inline-chrs
	( tl ) 0000 0000 0000 0102 0000 0000 0000 0001
	( tc ) 0000 0000 0000 ff00 0000 0000 0000 00ff
	( tr ) 0000 0000 0000 8040 0000 0000 0000 0080
	( mr ) 4040 4040 4040 4040 8080 8080 8080 8080
	( ml ) 0202 0202 0202 0202 0101 0101 0101 0101
	( bl ) 0201 0000 0000 0000 0100 0000 0000 0000
	( bc ) 00ff 0000 0000 0000 ff00 0000 0000 0000
	( br ) 4080 0000 0000 0000 8000 0000 0000 0000
	( mc ) 0000 0000 0000 0000 cccc 3333 cccc 3333
@font ( specter8-frag font )
	0000 0000 0000 0000 0008 0808 0800 0800
	0014 1400 0000 0000 0024 7e24 247e 2400
	0008 1e28 1c0a 3c08 0000 2204 0810 2200
	0030 4832 4c44 3a00 0008 1000 0000 0000
	0004 0808 0808 0400 0020 1010 1010 2000
	0000 2214 0814 2200 0000 0808 3e08 0800
	0000 0000 0000 0810 0000 0000 3e00 0000
	0000 0000 0000 0800 0000 0204 0810 2000
	003c 464a 5262 3c00 0018 0808 0808 1c00
	003c 4202 3c40 7e00 003c 421c 0242 3c00
	000c 1424 447e 0400 007e 407c 0242 3c00
	003c 407c 4242 3c00 007e 0204 0810 1000
	003c 423c 4242 3c00 003c 4242 3e02 3c00
	0000 0010 0000 1000 0000 1000 0010 1020
	0000 0810 2010 0800 0000 003e 003e 0000
	0000 1008 0408 1000 003c 420c 1000 1000
	003c 4232 4a42 3c00 003c 4242 7e42 4200
	007c 427c 4242 7c00 003c 4240 4042 3c00
	007c 4242 4242 7c00 007e 4078 4040 7e00
	007e 4078 4040 4000 003c 4240 4642 3c00
	0042 427e 4242 4200 001c 0808 0808 1c00
	007e 0202 0242 3c00 0042 4478 4442 4200
	0040 4040 4040 7e00 0042 665a 4242 4200
	0042 6252 4a46 4200 003c 4242 4242 3c00
	007c 4242 7c40 4000 003c 4242 4244 3a00
	007c 4242 7c44 4200 003e 403c 0242 3c00
	007e 0808 0808 1000 0042 4242 4244 3a00
	0042 4242 4224 1800 0042 4242 5a66 4200
	0042 423c 4242 4200 0042 423e 0242 3c00
	007e 020c 3040 7e00 000c 0808 0808 0c00
	0040 2010 0804 0200 0030 1010 1010 3000
	0008 1400 0000 0000 0000 0000 0000 7e00
	0008 0400 0000 0000 0000 3c02 3e42 3a00
	0040 407c 4242 7c00 0000 3c42 4042 3c00
	0002 023e 4242 3e00 0000 3c42 7e40 3e00
	0000 3e40 7840 4000 0000 3c42 3e02 3c00
	0040 405c 6242 4200 0008 0018 0808 0400
	0008 0018 0808 4830 0040 4244 7844 4200
	0010 1010 1010 0c00 0000 6c52 5252 5200
	0000 5c62 4242 4200 0000 3c42 4242 3c00
	0000 7c42 427c 4040 0000 3e42 423e 0202
	0000 5c62 4040 4000 0000 3e40 3c02 7c00
	0008 7e08 0808 1000 0000 4242 4244 3a00
	0000 4242 4224 1800 0000 5252 5252 2e00
	0000 4224 1824 4200 0000 4242 3e02 7c00
	0000 7e02 3c40 7e00 000c 0810 1008 0c00
	0008 0808 0808 0800 0030 1008 0810 3000
	0000 0032 4c00 0000 3c42 99a1 a199 423c

@data
